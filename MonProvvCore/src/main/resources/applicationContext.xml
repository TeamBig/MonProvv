<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:util="http://www.springframework.org/schema/util"	
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
						http://www.springframework.org/schema/aop 
						http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context-3.2.xsd
						http://www.springframework.org/schema/jee 
						http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
						http://www.springframework.org/schema/util 
						http://www.springframework.org/schema/util/spring-util-3.2.xsd
						http://www.springframework.org/schema/security
						http://www.springframework.org/schema/security/spring-security-3.2.xsd
						">

	<util:properties id="config" location="classpath:/monprovv.cfg" />


	<!-- 
	++++++++++++++++++++++++++++++++++++++++++++++
	GESTIONE LOGGING AOP INIZIO
	++++++++++++++++++++++++++++++++++++++++++++++	


	<bean id="methodLoggingInterceptor" class="it.tesoro.pdagiustizia.aop.MethodLoggingInterceptor">
		<property name="printStackTrace" value="#{config['log.printStackTrace']}"/>
	</bean>

	
	<bean id="proxyCreator" class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
		<property name="proxyTargetClass" value="true"/>
	    <property name="beanNames">
	        <list>
	            <value>*Facade</value>
	            <value>*Service</value>
	            <value>*DAO</value>
	            <value>*Controller</value>
	        </list>
	    </property>
	    <property name="interceptorNames">
	        <list>
	            <value>methodLoggingInterceptor</value>
	        </list>
	    </property>
	</bean>
	 -->
	<!-- 
	++++++++++++++++++++++++++++++++++++++++++++++
	GESTIONE LOGGING AOP FINE
	++++++++++++++++++++++++++++++++++++++++++++++	
	 -->



	<!-- 
	++++++++++++++++++++++++++++++++++++++++++++++
	SESSIONI HIBERNATE INIZIO
	++++++++++++++++++++++++++++++++++++++++++++++	
 	-->	

	<jee:jndi-lookup id="dataSource" jndi-name="#{config['jndiDataSourceName']}"/>

 	
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="it.tesoro.monprovv.model" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.Oracle10gDialect</prop>
				<prop key="hibernate.connection.autocommit">true</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.use_sql_comments">false</prop>
			</props>
		</property>
	</bean>

	<!-- 
	++++++++++++++++++++++++++++++++++++++++++++++
	TRANSACTION INIZIO
	++++++++++++++++++++++++++++++++++++++++++++++	
	 -->

	<bean id="txManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>


	<aop:config>
		<aop:pointcut id="serviceOperation"
			expression="execution(* it.tesoro.monprovv.facade..*Facade.*(..))" />
		<aop:advisor pointcut-ref="serviceOperation"
			advice-ref="txAdvice" />
	</aop:config>

	
	
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="inserisci*" propagation="REQUIRED" />
			<tx:method name="aggiorna*" propagation="REQUIRED" />
			<tx:method name="esegui*" propagation="REQUIRED" />
			<tx:method name="elimina*" propagation="REQUIRED" />
			<tx:method name="*" propagation="SUPPORTS" read-only="true" />
		</tx:attributes>
	</tx:advice>

	<!-- 
	++++++++++++++++++++++++++++++++++++++++++++++
	TRANSACTION FINE
	++++++++++++++++++++++++++++++++++++++++++++++	
	 -->

 	
	<!-- 
	++++++++++++++++++++++++++++++++++++++++++++++
	DAO E FACADE
	++++++++++++++++++++++++++++++++++++++++++++++	
	 -->
	
	<context:component-scan base-package="it.tesoro.monprovv.dao" />
	<context:component-scan base-package="it.tesoro.monprovv.facade" />
	
	<!-- 
	++++++++++++++++++++++++++++++++++++++++++++++
	FINE DAO E FACADE
	++++++++++++++++++++++++++++++++++++++++++++++	
	 -->
	 
	<!-- 
	++++++++++++++++++++++++++++++++++++++++++++++
	CACHE SERVICE
	++++++++++++++++++++++++++++++++++++++++++++++	
	 -->

	<context:component-scan base-package="it.tesoro.monprovv.cache" />
	
	<!-- 
	++++++++++++++++++++++++++++++++++++++++++++++
	FINE CACHE SERVICE
	++++++++++++++++++++++++++++++++++++++++++++++	
	 --> 

	 
	 <!-- 
	++++++++++++++++++++++++++++++++++++++++++++++
	SICUREZZA
	++++++++++++++++++++++++++++++++++++++++++++++	
	 -->
	
	<context:component-scan base-package="it.tesoro.monprovv.sicurezza" />
	
	<security:http pattern="/css/**" security="none"/>
  	<security:http pattern="/fonts/**" security="none"/>
  	<security:http pattern="/img/**" security="none"/>
	<security:http pattern="/js/**" security="none"/>
	
	<security:http use-expressions="true" auto-config="false" entry-point-ref="http403EntryPoint"> 

		<security:intercept-url pattern="/public/**" access="permitAll" />
		<security:intercept-url pattern="/private/**" access="hasPermission(request.servletPath, 'urlPermission')" />
		
		<security:custom-filter ref="oamFilter" position="PRE_AUTH_FILTER" />
		<security:custom-filter ref="sessionManagementFilter" before="SESSION_MANAGEMENT_FILTER" />
		<security:logout logout-success-url="#{config['oam.logoutUrl']}" invalidate-session="true" delete-cookies="JSESSIONID"/>
        <security:expression-handler ref="expressionHandler"/>
        <security:access-denied-handler error-page="/public/403" />
	</security:http>
	
	<bean id="http403EntryPoint" class="org.springframework.security.web.authentication.Http403ForbiddenEntryPoint" />
	
	<bean id="expressionHandler" class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler">
        <property name="permissionEvaluator" ref="permissionEvaluator"/>
	</bean>
	
	<bean id="methodExpressionHandler" class="org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler">
		<property name="permissionEvaluator" ref="permissionEvaluator"/>
	</bean> 

	<bean id="oamFilter"
		class="it.tesoro.monprovv.sicurezza.CustomRequestHeaderAuthenticationFilter">
		<property name="gestioneSicurezzaFacade" ref="gestioneSicurezzaFacade" />
		<property name="authenticationManager" ref="authenticationManager" />
		<property name="exceptionIfHeaderMissing" value="false" />
	</bean>

	<bean id="preauthAuthProvider"
		class="org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProvider">
		<property name="preAuthenticatedUserDetailsService">
			<bean id="userDetailsServiceWrapper"
				class="org.springframework.security.core.userdetails.UserDetailsByNameServiceWrapper">
				<property name="userDetailsService" ref="userDetailsService" />
			</bean>
		</property>
	</bean>

    <security:authentication-manager alias="authenticationManager">
      <security:authentication-provider ref="preauthAuthProvider" />
    </security:authentication-manager>


	<bean id="sessionManagementFilter"
		class="org.springframework.security.web.session.SessionManagementFilter">
		<constructor-arg name="securityContextRepository"
			ref="httpSessionSecurityContextRepository" />
		<property name="invalidSessionStrategy"
			ref="simpleRedirectInvalidSessionStrategy" />
	</bean>

	<bean id="simpleRedirectInvalidSessionStrategy"
		class="org.springframework.security.web.session.SimpleRedirectInvalidSessionStrategy">
		<constructor-arg name="invalidSessionUrl" value="#{config['oam.logoutUrl']}" />
		<property name="createNewSession" value="true" />
	</bean>
	<bean id="httpSessionSecurityContextRepository"
		class="org.springframework.security.web.context.HttpSessionSecurityContextRepository" />
		

	<security:global-method-security pre-post-annotations="enabled">
		<security:expression-handler ref="methodExpressionHandler" />
	</security:global-method-security>	
			
	 <!-- 
	++++++++++++++++++++++++++++++++++++++++++++++
	FINE SICUREZZA
	++++++++++++++++++++++++++++++++++++++++++++++	
	 -->	 
	 
	 
	 
</beans>
